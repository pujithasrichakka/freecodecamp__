import pandas as pd

# Import the data
df = pd.read_csv("fcc-forum-pageviews.csv", parse_dates=["date"], index_col="date")

# Clean the data
df = df[(df["value"] >= df["value"].quantile(0.025)) & (df["value"] <= df["value"].quantile(0.975))]
import matplotlib.pyplot as plt

def draw_line_plot():
    fig, ax = plt.subplots(figsize=(12, 6))
    ax.plot(df.index, df["value"], color="r", linewidth=1)
    ax.set_title("Daily freeCodeCamp Forum Page Views 5/2016-12/2019")
    ax.set_xlabel("Date")
    ax.set_ylabel("Page Views")

    # Save the plot
    fig.savefig("line_plot.png")

# Call the function to generate the line plot
draw_line_plot()
def draw_bar_plot():
    df_bar = df.copy()
    df_bar["year"] = df_bar.index.year
    df_bar["month"] = df_bar.index.month_name()

    df_bar = df_bar.groupby(["year", "month"])["value"].mean().unstack()
    months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]

    fig, ax = plt.subplots(figsize=(12, 6))
    df_bar.plot(kind="bar", ax=ax)
    ax.set_title("Average Daily Page Views by Month (2016-2019)")
    ax.set_xlabel("Years")
    ax.set_ylabel("Average Page Views")
    ax.set_xticklabels(df_bar.index, rotation=90)
    ax.legend(title="Months", labels=months)

    # Save the plot
    fig.savefig("bar_plot.png")

# Call the function to generate the bar plot
draw_bar_plot()
import seaborn as sns

def draw_box_plot():
    df_box = df.copy()
    df_box.reset_index(inplace=True)
    df_box["year"] = df_box["date"].dt.year
    df_box["month"] = df_box["date"].dt.strftime("%b")

    fig, axes = plt.subplots(1, 2, figsize=(12, 6))

    sns.boxplot(x="year", y="value", data=df_box, ax=axes[0])
    axes[0].set_title("Year-wise Box Plot (Trend)")
    axes[0].set_xlabel("Year")
    axes[0].set_ylabel("Page Views")

    sns.boxplot(x="month", y="value", data=df_box, ax=axes[1], order=months)
    axes[1].set_title("Month-wise Box Plot (Seasonality)")
    axes[1].set_xlabel("Month")
    axes[1].set_ylabel("Page Views")

    # Save the plot
    fig.savefig("box_plot.png")

# Call the function to generate the box plots
draw_box_plot()
